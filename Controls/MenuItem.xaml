<UserControl
    x:Class="Sistema_Mercadito.Controls.MenuItem"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Sistema_Mercadito.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Name="this"
    mc:Ignorable="d">

    <UserControl.Resources>

        <!--  Start: Indicator Style  -->
        <Style x:Key="IndicatorStyle" TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="0 5 5 0" />
            <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}" />
            <Setter Property="Visibility" Value="Hidden" />
            <Setter Property="Height" Value="35" />
            <Setter Property="Width" Value="4" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                    <Setter Property="Background" Value="{DynamicResource TextFourthColor}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                    <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--  End: Indicator Style  -->

        <!--  Start: Menu Icon Style  -->
        <Style x:Key="MenuIconStyle" TargetType="{x:Type Path}">
            <Setter Property="Fill" Value="{DynamicResource SecundaryIconColor}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                    <Setter Property="Fill" Value="{DynamicResource TextFourthColor}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                    <Setter Property="Fill" Value="{DynamicResource PrimaryBlueColor}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--  End: Menu Icon Style  -->

        <!--  Start: Menu Text Style  -->
        <Style x:Key="MenuTextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource SecundaryIconColor}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="Regular" />
            <Setter Property="Margin" Value="18,0,0,0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource TextFourthColor}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryBlueColor}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--  End: Menu Text Style  -->

        <!--  Start: Menu Item Style  -->
        <Style x:Key="MenuButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="{DynamicResource BorderThickness}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Width" Value="250" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            Padding="{Binding Padding, ElementName=this}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="60" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <!--  Indicator  -->
                                <Border Style="{StaticResource IndicatorStyle}" />

                                <!--  Icon  -->
                                <Path
                                    Width="{Binding IconWidth, ElementName=this, FallbackValue=20, TargetNullValue=20}"
                                    Margin="{Binding IconMargin, FallbackValue='0,0,0,0', TargetNullValue='20,0,0,0'}"
                                    Data="{Binding Icon, ElementName=this, FallbackValue={StaticResource DefaultIcon}, TargetNullValue={StaticResource DefaultIcon}}"
                                    Stretch="Uniform"
                                    Style="{StaticResource MenuIconStyle}" />

                                <!--  Menu Text  -->
                                <TextBlock
                                    Grid.Column="1"
                                    Margin="0,0,0,0"
                                    FontSize="14"
                                    FontWeight="Regular"
                                    Style="{StaticResource MenuTextStyle}"
                                    Text="{Binding Text, ElementName=this, FallbackValue=MenuText, TargetNullValue=MenuText}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--  To set IsChecked property to true on default  -->
                            <DataTrigger Binding="{Binding IsSelected, ElementName=this}" Value="True">
                                <Setter Property="IsChecked" Value="True" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  End: Menu Item Style  -->
    </UserControl.Resources>

    <Grid>
        <RadioButton GroupName="{Binding GroupName, ElementName=this}" Style="{StaticResource MenuButtonStyle}" />
    </Grid>
</UserControl>